sections:
  - title: Build a UI Component
    description: Typically framework agnostic and ask you to build a simple UI component, like a Clock.
    slug: build-a-ui
  - title: Build a JS Class
    description: Build a class or function that replicates an abstraction you have probably used before - such as a Promise class.
    slug: build-a-js-class
# The frontend interview commonly has different skills to be tested for. The types of interviews are as follows

# ## Coding Interviews

# ### [Build a UI Component](./build-a-component)

# Your task is to build a component. These interviews are typically framework agnostic. You will be evaluated based on your ability to clarify requirements and your ability to existing clean, re-usable code.

# ### [Build a JS Class](./build-a-js-class)

# Your task is to build a class or function that that performs some specific behavior. These typically replicate functionality that is familiar to you. Examples are a `Promise` class or an `EventEmitter` class.

# ### [Algorithm / Data Structures](./algorithm-and-data-structures)

# Typically no more difficult than leetcode medium. Brushing up on trees and things like "find the most frequent element in an array" are suggested.

# ## Architecture

# ### [Design a component](./design-a-component)

# Designing the API and how the implementation would work for a specific UI component - for example a `react-select` clone or a `tooltip` component.

# ### [Design an application flow](./design-an-application-flow)

# Given a high level spec for a feature you are expected to

# - Clarify requirements for the feature

# - Design how navigation flow should work

# - Design desired API requests / payloads

# - Make decisions for how state is handled / passed around

# - Make decisions for frameworks / libraries

# ## Behavioral Questions

# Questions about past experiences, often dealing with leadership traits, product ownership, conflict resolution with peers and technical decision making processes
